{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\uhemv\\\\Desktop\\\\money clack\\\\moneycalc\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\"; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteCalculator = () => {\n  _s();\n  const [notes, setNotes] = useState({\n    20: 0,\n    10: 0,\n    5: 0,\n    2: 0,\n    1: 0,\n    0.5: 0,\n    0.2: 0,\n    0.1: 0,\n    0.05: 0\n  });\n  const [total, setTotal] = useState(0);\n  const [exceeds300, setExceeds300] = useState(false);\n  const [notesToTakeOut, setNotesToTakeOut] = useState({});\n  useEffect(() => {\n    document.title = \"Note Calculator\"; // Change the title when the component mounts\n  }, []);\n  const calculateTotal = () => {\n    let sum = 0;\n    for (const [note, count] of Object.entries(notes)) {\n      sum += note * count;\n    }\n    setTotal(sum);\n    if (sum > 300) {\n      setExceeds300(true);\n      calculateNotesToTakeOut(sum - 300);\n    } else {\n      setExceeds300(false);\n    }\n  };\n  const calculateNotesToTakeOut = amount => {\n    const notesToTakeOut = {};\n    const allowedNotes = [20, 10, 5]; // Only consider $20, $10, and $5 notes if total exceeds $300\n    let remainingAmount = amount;\n    allowedNotes.forEach(note => {\n      const noteCount = Math.min(Math.floor(remainingAmount / note), notes[note]);\n      if (noteCount > 0) {\n        notesToTakeOut[note] = noteCount;\n        remainingAmount -= noteCount * note;\n      }\n    });\n    setNotesToTakeOut(notesToTakeOut);\n  };\n  const handleNoteChange = (value, note) => {\n    const newNotes = {\n      ...notes,\n      [note]: value\n    };\n    setNotes(newNotes);\n    calculateTotal();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Note Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-container\",\n      children: Object.entries(notes).map(([note, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: `$${note}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: count,\n          onChange: e => handleNoteChange(parseInt(e.target.value), note)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)]\n      }, note, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"total\",\n      children: [\"Total: $\", total]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), exceeds300 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-to-take-out\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Notes to take out to make total less than or equal to $300:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), Object.entries(notesToTakeOut).map(([note, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `${count} notes of $${note}`\n      }, note, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteCalculator, \"uNVTJb5j5fbaJs0IMGrf3plWw5w=\");\n_c = NoteCalculator;\nexport default NoteCalculator;\nvar _c;\n$RefreshReg$(_c, \"NoteCalculator\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","NoteCalculator","_s","notes","setNotes","total","setTotal","exceeds300","setExceeds300","notesToTakeOut","setNotesToTakeOut","document","title","calculateTotal","sum","note","count","Object","entries","calculateNotesToTakeOut","amount","allowedNotes","remainingAmount","forEach","noteCount","Math","min","floor","handleNoteChange","value","newNotes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","onChange","e","parseInt","target","_c","$RefreshReg$"],"sources":["C:/Users/uhemv/Desktop/money clack/moneycalc/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport \"./App.css\" // Import the CSS file\n\nconst NoteCalculator = () => {\n  const [notes, setNotes] = useState({\n    20: 0,\n    10: 0,\n    5: 0,\n    2: 0,\n    1: 0,\n    0.5: 0,\n    0.2: 0,\n    0.1: 0,\n    0.05: 0,\n  })\n  const [total, setTotal] = useState(0)\n  const [exceeds300, setExceeds300] = useState(false)\n  const [notesToTakeOut, setNotesToTakeOut] = useState({})\n\n  useEffect(() => {\n    document.title = \"Note Calculator\" // Change the title when the component mounts\n  }, [])\n\n  const calculateTotal = () => {\n    let sum = 0\n    for (const [note, count] of Object.entries(notes)) {\n      sum += note * count\n    }\n    setTotal(sum)\n    if (sum > 300) {\n      setExceeds300(true)\n      calculateNotesToTakeOut(sum - 300)\n    } else {\n      setExceeds300(false)\n    }\n  }\n\n  const calculateNotesToTakeOut = (amount) => {\n    const notesToTakeOut = {}\n    const allowedNotes = [20, 10, 5] // Only consider $20, $10, and $5 notes if total exceeds $300\n    let remainingAmount = amount\n    allowedNotes.forEach((note) => {\n      const noteCount = Math.min(\n        Math.floor(remainingAmount / note),\n        notes[note]\n      )\n      if (noteCount > 0) {\n        notesToTakeOut[note] = noteCount\n        remainingAmount -= noteCount * note\n      }\n    })\n    setNotesToTakeOut(notesToTakeOut)\n  }\n\n  const handleNoteChange = (value, note) => {\n    const newNotes = { ...notes, [note]: value }\n    setNotes(newNotes)\n    calculateTotal()\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Note Calculator</h1>\n      <div className=\"notes-container\">\n        {Object.entries(notes).map(([note, count]) => (\n          <div key={note}>\n            <span>{`$${note}`}</span>\n            <input\n              type=\"number\"\n              value={count}\n              onChange={(e) => handleNoteChange(parseInt(e.target.value), note)}\n            />\n          </div>\n        ))}\n      </div>\n      <div className=\"total\">Total: ${total}</div>\n      {exceeds300 && (\n        <div className=\"notes-to-take-out\">\n          <h2>Notes to take out to make total less than or equal to $300:</h2>\n          {Object.entries(notesToTakeOut).map(([note, count]) => (\n            <div key={note}>{`${count} notes of $${note}`}</div>\n          ))}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NoteCalculator\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}